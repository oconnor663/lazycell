var searchIndex = {};
searchIndex["lazycell"] = {"doc":"This crate provides a `LazyCell` struct which acts as a lazily filled\n`Cell`, but with frozen contents.","items":[[3,"LazyCell","lazycell","A lazily filled `Cell`, with frozen contents.",null,null],[3,"AtomicLazyCell","","A lazily filled `Cell`, with frozen contents.",null,null],[11,"new","","Creates a new, empty, `LazyCell`.",0,{"inputs":[],"output":{"name":"lazycell"}}],[11,"fill","","Put a value into this cell.",0,null],[11,"filled","","Test whether this cell has been previously filled.",0,null],[11,"borrow","","Borrows the contents of this lazy cell for the duration of the cell\nitself.",0,null],[11,"borrow_with","","Borrows the contents of this lazy cell for the duration of the cell\nitself.",0,null],[11,"into_inner","","Consumes this `LazyCell`, returning the underlying value.",0,null],[11,"new","","Creates a new, empty, `AtomicLazyCell`.",1,{"inputs":[],"output":{"name":"atomiclazycell"}}],[11,"fill","","Put a value into this cell.",1,null],[11,"filled","","Test whether this cell has been previously filled.",1,null],[11,"borrow","","Borrows the contents of this lazy cell for the duration of the cell\nitself.",1,null],[11,"into_inner","","Consumes this `LazyCell`, returning the underlying value.",1,null]],"paths":[[3,"LazyCell"],[3,"AtomicLazyCell"]]};
initSearch(searchIndex);
